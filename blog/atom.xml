<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0">
    <channel>
        <title>全端開發人員天梯</title>
        <link>https://fullstackladder.dev/</link>
        <description>軟體開發學不完，就像爬不完的天梯，只好多紀錄寫筆記</description>
        <lastBuildDate>Fri, 10 Feb 2023 15:44:02 GMT</lastBuildDate>
        <docs>https://validator.w3.org/feed/docs/rss2.html</docs>
        <generator>https://github.com/jpmonette/feed</generator>
        <language>zh</language>
        <copyright>All rights reserved 2021, Mike Huang</copyright>
        <item>
            <title><![CDATA[QuestPDF - 支援中文、免費好用的 C# PDF 產生器]]></title>
            <link>https://fullstackladder.dev/blog/2023/02/05/introduction-quest-pdf</link>
            <guid>https://fullstackladder.dev/blog/2023/02/05/introduction-quest-pdf</guid>
            <pubDate>Sun, 05 Feb 2023 13:15:31 GMT</pubDate>
            <description><![CDATA[<p>產生 PDF 的套件並不難找，有趣的是，.NET 的 PDF 套件雖然不少，但幾乎都是商業授權，免費又好用的卻不多，最近找到一套 <a href="https://www.questpdf.com/">QuestPDF</a>，它的 API 設計非常漂亮，支援中文，並且免費開源，雖然不一定是最強大的套件，但對於一般產生 PDF 的工作，已經非常好用了。</p>
]]></description>
        </item>
        <item>
            <title><![CDATA[[OpenID] 使用 RS256 與 JWKS 驗證 JWT token 有效性]]></title>
            <link>https://fullstackladder.dev/blog/2023/01/28/openid-validate-token-with-rs256-and-jwks</link>
            <guid>https://fullstackladder.dev/blog/2023/01/28/openid-validate-token-with-rs256-and-jwks</guid>
            <pubDate>Sat, 28 Jan 2023 15:15:21 GMT</pubDate>
            <description><![CDATA[<p>使用 JWT token 來進行身份認證已經是現在開發上的顯學了，常見的服務如 Microsoft 等透過 OAuth 2.0 登入後，有會拿到一組 JWT 格式的 access token，我們可以透過這個 token 去呼叫相關的 API 來取得想要得資料，但除了把 access token 丟給 API 外，我們有沒有其他方是可以驗證這個 token 是否有效呢？</p>
<p>如果服務使用 RS256 對 token 簽章，且有跟著 OpenID 的規範走的話，是有一套完整在 client 端就可以自行驗證的流程的，這篇文章就來說明一下所有相關的技術，同時實際拿個 token 來驗證看看！</p>
]]></description>
        </item>
        <item>
            <title><![CDATA[[Azure DevOps] 整合 Horusec 掃描結果]]></title>
            <link>https://fullstackladder.dev/blog/2023/01/08/azure-devops-intergrate-horusec</link>
            <guid>https://fullstackladder.dev/blog/2023/01/08/azure-devops-intergrate-horusec</guid>
            <pubDate>Sun, 08 Jan 2023 10:40:05 GMT</pubDate>
            <description><![CDATA[<p>之前在文章中介紹了「<a href="https://fullstackladder.dev/blog/2023/01/07/introduction-horusec/">Horusec</a>」這個強大的程式碼安全掃描工具，今天也來介紹一下如何整合到 Azure DevOps 的 CI pipeline 中。</p>
]]></description>
        </item>
        <item>
            <title><![CDATA[使用 Horusec 對程式碼安全性進行掃描]]></title>
            <link>https://fullstackladder.dev/blog/2023/01/07/introduction-horusec</link>
            <guid>https://fullstackladder.dev/blog/2023/01/07/introduction-horusec</guid>
            <pubDate>Sat, 07 Jan 2023 15:00:47 GMT</pubDate>
            <description><![CDATA[<p><a href="https://github.com/ZupIT/horusec">Horusec</a> 是一套開源的程式碼靜態分析工具，他可以幫助我們對程式碼進行安全性掃描，並且支援許多常見的語言，功能非常強大。</p>
]]></description>
        </item>
        <item>
            <title><![CDATA[[Azure DevOps] 整合 Security Code Scan 掃描結果]]></title>
            <link>https://fullstackladder.dev/blog/2022/12/31/azure-devops-intergrate-security-code-scan</link>
            <guid>https://fullstackladder.dev/blog/2022/12/31/azure-devops-intergrate-security-code-scan</guid>
            <pubDate>Sat, 31 Dec 2022 13:10:08 GMT</pubDate>
            <description><![CDATA[<p>之前文章介紹過「<a href="https://fullstackladder.dev/blog/2022/12/24/introduction-security-code-scan/">使用 Security Code Scan 為 .NET 應用程式進行程式碼安全性掃描</a>」，這篇文章接著來介紹一下如何在 Azure DevOps 的 CI pipeline 中整合 Security Code Scan 掃描結果。</p>
]]></description>
        </item>
        <item>
            <title><![CDATA[使用 Security Code Scan 為 .NET 應用程式進行程式碼安全性掃描]]></title>
            <link>https://fullstackladder.dev/blog/2022/12/24/introduction-security-code-scan</link>
            <guid>https://fullstackladder.dev/blog/2022/12/24/introduction-security-code-scan</guid>
            <pubDate>Sat, 24 Dec 2022 13:34:32 GMT</pubDate>
            <description><![CDATA[<p><a href="https://security-code-scan.github.io/">Security Code Scan</a> 是一套針對 .NET 的程式碼靜態分析工具，他可以針對程式碼中的安全性問題進行掃描，並且提供了一些程式碼修正的建議。今天這篇文章就來介紹一下如何使用 Security Code Scan 來進行程式碼安全性掃描。</p>
]]></description>
        </item>
        <item>
            <title><![CDATA[[Azure DevOps] 透過 cache 加快 CI pipeline 速度]]></title>
            <link>https://fullstackladder.dev/blog/2022/12/17/azure-devops-cache-build-pipeline</link>
            <guid>https://fullstackladder.dev/blog/2022/12/17/azure-devops-cache-build-pipeline</guid>
            <pubDate>Sat, 17 Dec 2022 12:04:50 GMT</pubDate>
            <description><![CDATA[<p>在 CI 階段時，我們經常會需要針對專案內容安裝各種套件，不過其實套件內容也很少更動，但每次安裝都會花上不少時間，雖然都放著讓 CI 跑就好了，但還是免不了要等一段時間，好在 Azure DevOps 提供了 <a href="https://learn.microsoft.com/en-us/azure/devops/pipelines/release/caching?view=azure-devops&amp;WT.mc_id=DOP-MVP-5003734">Pipeline caching</a> 功能，讓我們可以將套件內容先暫存起來，下次就不用再安裝了，加快 CI pipline 的速度，這篇文章就來介紹一下 Pipeline caching 的工能。</p>
]]></description>
        </item>
        <item>
            <title><![CDATA[將 Blazor WebAssembly 整合進 Tauri 應用程式]]></title>
            <link>https://fullstackladder.dev/blog/2022/12/10/tauri-with-blazor-web-assembly</link>
            <guid>https://fullstackladder.dev/blog/2022/12/10/tauri-with-blazor-web-assembly</guid>
            <pubDate>Sat, 10 Dec 2022 09:10:11 GMT</pubDate>
            <description><![CDATA[<p>Tauri 內建了很多前端的專案範本，但可惜的是沒有 Blazor WebAssembly 的範本，但 Tauri 架構本身已經考量得很完善了，只要最終產出是純前端的網站，任何應用程式都可以包裝到 Tauri 內，今天這篇文章就來說明一下如何將 Blazor WebAssembly 加到 Tauri 應用程式內。</p>
]]></description>
        </item>
        <item>
            <title><![CDATA[Directive composition API 初體驗]]></title>
            <link>https://fullstackladder.dev/blog/2022/11/20/angular-directive-composition-api-introduction</link>
            <guid>https://fullstackladder.dev/blog/2022/11/20/angular-directive-composition-api-introduction</guid>
            <pubDate>Sun, 20 Nov 2022 12:02:43 GMT</pubDate>
            <description><![CDATA[<p>Angular v15 推出了新的 feature - <strong>directive composition API</strong>，可以方便我們更加容易組合出更複雜的 directive。</p>
<p>這篇文章就讓我們來快速體驗一下 directive composition API 使用起來是什麼感覺！</p>
]]></description>
        </item>
        <item>
            <title><![CDATA[使用 C# 撰寫 ModbusTCP client]]></title>
            <link>https://fullstackladder.dev/blog/2022/11/12/modbustcp-client-using-csharp</link>
            <guid>https://fullstackladder.dev/blog/2022/11/12/modbustcp-client-using-csharp</guid>
            <pubDate>Sat, 12 Nov 2022 16:51:29 GMT</pubDate>
            <description><![CDATA[<p>在之前的文章「簡介 Modbus TCP」我們簡單介紹了工業上常見且簡單的通訊方式，Modbus 以及 ModbusTCP，由於 ModbusTCP 本身非常簡單，因此就算不靠任何 library，只要懂得撰寫簡單的 TCP 程式就可以自己實作一個 ModbusTCP client，所以今天就以 C# 為例，實作一個簡單具有讀取功能的 ModbusTCP client。</p>
]]></description>
        </item>
        <item>
            <title><![CDATA[簡介 Modbus TCP]]></title>
            <link>https://fullstackladder.dev/blog/2022/11/07/introduction-modbustcp</link>
            <guid>https://fullstackladder.dev/blog/2022/11/07/introduction-modbustcp</guid>
            <pubDate>Mon, 07 Nov 2022 18:01:16 GMT</pubDate>
            <description><![CDATA[<p>Modbus 是在工業領域中廣泛使用的訊息交換規範，而 Modbus TCP 則是 Modbus 的一種實現，它使用 TCP/IP 作為傳輸層協定，因此可以透過網路傳輸。</p>
<p>最近在著手開發一個跟工業相關的專案，需要透過 Modbus TCP 協定來取得設備上的資訊，這篇文章會紀錄一下 Modbus TCP 的基本概念及協定規格。</p>
]]></description>
        </item>
        <item>
            <title><![CDATA[Tauri 初體驗：前端打造桌面應用程式的小巧快速新選擇]]></title>
            <link>https://fullstackladder.dev/blog/2022/10/30/tauri-introduction</link>
            <guid>https://fullstackladder.dev/blog/2022/10/30/tauri-introduction</guid>
            <pubDate>Sun, 30 Oct 2022 14:56:12 GMT</pubDate>
            <description><![CDATA[<p><a href="https://tauri.app/">Tauri</a> 放在我的待研究項目裡面已經有好一段時間了，原本有研究了一小斷時間，但因為環境準備太過複雜而暫時停止。</p>
<p>最新忽然發現 Tauri 出到 v1.1，不再是 beta 版了，看了一下文件發現整體環境準備變得非常簡單，而且功能及文件也都非常完整了，就花了點時間研究一下，整理成以下筆記，也說說自己的體驗心得。</p>
]]></description>
        </item>
        <item>
            <title><![CDATA[使用 Client Credentials 來取得具有 Azure REST API 權限的 Access Token]]></title>
            <link>https://fullstackladder.dev/blog/2022/10/22/manipulate-azure-resource-using-client-credentials</link>
            <guid>https://fullstackladder.dev/blog/2022/10/22/manipulate-azure-resource-using-client-credentials</guid>
            <pubDate>Sat, 22 Oct 2022 12:57:05 GMT</pubDate>
            <description><![CDATA[<p>如果有在使用 Azure，一般會直接在 Azure Portal 上操作，或是透過 Azure CLI；但是如果要在程式中操作 Azure 資源，就需要透過 Azure REST API 來呼叫。</p>
<p>Azure 當然也提供了許多 SDK 讓我們不需要花太多時間去研究 REST API，不過背後原理都是透過 REST API 呼叫，如果遇到使用的語言沒有對應的 SDK，還是必須自己用 REST API 來呼叫，因此研究一下背後的 API 還是很有價值的。</p>
<p>這篇文章就來看一下如何透過 Client Credentials 的方式來呼叫 Azure REST API。</p>
]]></description>
        </item>
        <item>
            <title><![CDATA[[Chrome DevTools] 透過開發者工具動態切換暗黑模式]]></title>
            <link>https://fullstackladder.dev/blog/2022/10/16/change-prefers-color-scheme-by-dev-tools</link>
            <guid>https://fullstackladder.dev/blog/2022/10/16/change-prefers-color-scheme-by-dev-tools</guid>
            <pubDate>Sun, 16 Oct 2022 10:47:15 GMT</pubDate>
            <description><![CDATA[<p>Dark mode (暗黑模式) 已經逐漸成為現代網頁開發的主流，很多網站也都逐漸加入的對 dark mode 的支援，讓網站預設也可以跟著作業系統的深色或淺色模式自動切換</p>
<p>雖然顏色偏好讓使用者體驗更好，但也確實增加了網站開發時期的負擔，我們必須同時測試兩種顏色模式的顯示效果，如果每次測試都要主動切換系統的模式，也未免太辛苦了！還好 Chrome DevTools 內建了主題切換，讓我們可以直接在開發工具切換目前網頁的顯示模式，大幅度的節省時間，今天就來看看如何在深色和淺色模式之間自由的切換！</p>
]]></description>
        </item>
        <item>
            <title><![CDATA[[Angular 大師之路] 透過 DI 容器修正第三方元件的 bug]]></title>
            <link>https://fullstackladder.dev/blog/2022/10/07/angular-advanced-using-di-to-fix-third-party-bugs</link>
            <guid>https://fullstackladder.dev/blog/2022/10/07/angular-advanced-using-di-to-fix-third-party-bugs</guid>
            <pubDate>Fri, 07 Oct 2022 20:08:13 GMT</pubDate>
            <description><![CDATA[<p>最進公司內某個專案遇到了一個 bug 是因為第三方套件的已知 bug 導致，但又不可能等人家修好 bug 我們才能處理，於是來詢問我的想法；其實這並不是一個很難的問題，尤其是在 Angular 這種完整個框架下，透過 DI 容器就可以輕易的達成，只是不一定想得到而已，由於大多數我們會使用到 Angular 的 DI 機制常常都是再進行一些組態設定，難得有個案例是用來修 bug 的，就用這篇文章來記錄一下！</p>
]]></description>
        </item>
        <item>
            <title><![CDATA[使用 k6 進行壓力測試]]></title>
            <link>https://fullstackladder.dev/blog/2022/09/17/load-test-by-k6</link>
            <guid>https://fullstackladder.dev/blog/2022/09/17/load-test-by-k6</guid>
            <pubDate>Sat, 17 Sep 2022 19:35:10 GMT</pubDate>
            <description><![CDATA[<p>當系統預期有很多人同時上線時，可能會需要進行壓力測試。比起老牌工具 Apache Jmeter 的高學習難度，k6 是一套很好的壓力測試工具，對於開發人員來說非常友善。</p>
<p>本文將簡單介紹如何使用 k6 進行壓力測試。</p>
]]></description>
        </item>
        <item>
            <title><![CDATA[[Visual Studio Code 小技巧] 改變檔案的換行符號]]></title>
            <link>https://fullstackladder.dev/blog/2022/09/10/change-crlf-in-vscode</link>
            <guid>https://fullstackladder.dev/blog/2022/09/10/change-crlf-in-vscode</guid>
            <pubDate>Sat, 10 Sep 2022 21:12:52 GMT</pubDate>
            <description><![CDATA[<p>換行符號在不同的作業系統上有不同的表示方式，Windows 會使用 CRLF (a.k.a <code>\r\n</code>)，而 Linux 則是使用 LF (a.k.a <code>\n</code>)，這樣在不同的作業系統上，如果有人使用不同的換行符號，有時就會出現一些問題，所以我們需要在不同的作業系統上都使用相同的換行符號，這樣才能避免不同的問題。</p>
<p>這篇文章就來說說如何用 VSCode 來改變檔案的換行符號。</p>
]]></description>
        </item>
        <item>
            <title><![CDATA[目前我在 VS Code 中使用的 Git 相關擴充功能 (2022 版)]]></title>
            <link>https://fullstackladder.dev/blog/2022/09/03/vscode-extensions-for-git-in-2022</link>
            <guid>https://fullstackladder.dev/blog/2022/09/03/vscode-extensions-for-git-in-2022</guid>
            <pubDate>Sat, 03 Sep 2022 17:01:48 GMT</pubDate>
            <description><![CDATA[<p>分享一下目前我有在使用 Git 相關的 VS Code 擴充功能。</p>
]]></description>
        </item>
        <item>
            <title><![CDATA[[NgRx 速成班] 用 Effects 讓元件持續保持單純]]></title>
            <link>https://fullstackladder.dev/blog/2022/08/07/ngrx-05-effects</link>
            <guid>https://fullstackladder.dev/blog/2022/08/07/ngrx-05-effects</guid>
            <pubDate>Sun, 07 Aug 2022 09:01:34 GMT</pubDate>
            <description><![CDATA[<p>前幾天我們已經講 NgRx 狀態管理最重要的幾個核心角色 - Store、Selector、Action 和 Reducer 介紹過了；今天我們來講講 NgRx 另外一個很重要的角色 - Effects。</p>
]]></description>
        </item>
        <item>
            <title><![CDATA[[NgRx 速成班] 更改狀態的基礎 Action & Reducer]]></title>
            <link>https://fullstackladder.dev/blog/2022/08/03/ngrx-04-action-reducer</link>
            <guid>https://fullstackladder.dev/blog/2022/08/03/ngrx-04-action-reducer</guid>
            <pubDate>Wed, 03 Aug 2022 16:27:30 GMT</pubDate>
            <description><![CDATA[<p>上篇文章我們介紹了 <a href="2022/08/01/ngrx-02-schematics/">NgRx 的 Store 和 Selector</a>，這兩個角色主要是用來存放資料及讀取資料用的，接著我們來看看如何更新儲存的資料 - Action 和 Reducer。</p>
<p>一樣的，基本的程式骨架已經在「<a href="/blog/2022/08/01/ngrx-02-schematics/">使用 NgRx Schematics 快速產生程式碼骨架</a>」建立，接下來將會直接沿用產生出來的程式骨架，繼續調整程式碼。</p>
]]></description>
        </item>
    </channel>
</rss>