// Custom Theming for Angular Material
// For more information: https://material.angular.io/guide/theming
@use '@angular/material' as mat;
// Plus imports for other components in your app.

@use './hljs.scss';
@use './variables';
@use './reset.scss';
@use './blog-post.scss';

// tailwind
@tailwind components;
@tailwind utilities;

// Include the common styles for Angular Material. We include this here so that you only
// have to load a single css file for Angular Material in your app.
// Be sure that you only ever include this mixin once!
@include mat.all-component-typographies();
@include mat.core();

// Define the palettes for your theme using the Material Design palettes available in palette.scss
// (imported above). For each palette, you can optionally specify a default, lighter, and darker
// hue. Available color palettes: https://material.io/design/color/
$blog-primary: mat.m2-define-palette(mat.$m2-indigo-palette);
$blog-accent: mat.m2-define-palette(mat.$m2-pink-palette, A200, A100, A400);

// The warn palette is optional (defaults to red).
$blog-warn: mat.m2-define-palette(mat.$m2-red-palette);

// Create the theme object. A theme consists of configurations for individual
// theming systems such as "color" or "typography".
$blog-theme: mat.m2-define-light-theme((
  color: (
    primary: $blog-primary,
    accent: $blog-accent,
    warn: $blog-warn,
  )
));

// Include theme styles for core and each component used in your app.
// Alternatively, you can import and @include the theme mixins for each component
// that you are using.
@include mat.all-component-themes($blog-theme);

$blog-dark-theme: mat.m2-define-dark-theme((
  color: (
    primary: $blog-primary,
    accent: $blog-accent,
    warn: $blog-warn,
  )
));

.dark-theme {
  // Generates styles for all systems configured in the theme. In this case, color styles
  // and the default density styles are generated. **Note** that this is a problem because it
  // means that density styles are generated *again*, even though only the color should change.
  background-color: #303030;
  @include mat.all-component-colors($blog-dark-theme);
}

/* You can add global styles to this file, and also import other style files */
.suggest-item-type {
  font-size: 12px;
  margin-right: 6px;
  color: var(--secondary-text-color);
}

a {
  color: var(--default-link-color);
  text-decoration: underline;
  transition: all 0.3s;

  &:hover {
    color: var(--default-link-hover-color);
    text-decoration: underline;
  }

  &:active {
    color: var(--default-link-color);
  }
}


.categories-header, .tags-header, .year-header, .search-header {
  background-color: var(--sub-pages-header-background-color) !important;
  display: flex;
  align-items: baseline !important;
  position: sticky;
  top: 0;
  z-index: 101;
  margin-bottom: 8px;

  @media (max-width: 959.98px) {
    h1 {
      font-size: 24px !important;
    }

    h2 {
      display: none !important;
    }
  }

  h1 {
    font-size: 36px;
    top: 50%;
    position: relative;
    transform: translateY(-50%);
  }

  h2 {
    margin-left: 2px;
    color: var(--secondary-text-color);
    top: 50%;
    position: relative;
    transform: translateY(-50%);
  }
}

.mat-mdc-card.pagination {
  display: flex !important;
  padding: 16px;
}

// responsive embed element, from bootstrap
.embed-responsive {
  position: relative;
  display: block;
  width: 100%;
  padding: 0;
  overflow: hidden;

  &::before {
    display: block;
    content: "";
  }

  &.embed-responsive-16by9::before {
    padding-top: 56.25%;
  }

  &.embed-responsive-liker-coin::before {
    padding-top: 170px;
  }

  .embed-responsive-item {
    position: absolute;
    top: 0;
    bottom: 0;
    left: 0;
    width: 100%;
    height: 100%;
    border: 0;
  }
}

@layer components {
  blockquote {
    @apply border-0 border-l-4 border-solid border-l-[color:var(--primary-color)] pl-4;
  }
}
